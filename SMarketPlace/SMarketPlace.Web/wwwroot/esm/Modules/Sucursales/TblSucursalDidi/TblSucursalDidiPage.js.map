{
  "version": 3,
  "sources": ["../../../../../Modules/Sucursales/TblSucursalDidi/TblSucursalDidiPage.ts", "../../../../../Modules/Sucursales/TblSucursalDidi/TblSucursalDidiGrid.ts", "../../../../../Modules/Sucursales/TblSucursalDidi/TblSucursalDidiDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { TblSucursalDidiGrid } from './TblSucursalDidiGrid';\r\n\r\nexport default function pageInit() {\r\n    initFullHeightGridPage(new TblSucursalDidiGrid($('#GridDiv')).element);\r\n}", "import { Decorators, EntityGrid, GridRowSelectionMixin, ToolButton } from '@serenity-is/corelib';\r\nimport { TblSucursalDidiColumns, TblSucursalDidiRow, TblSucursalDidiService } from '../../ServerTypes/Sucursales';\r\nimport { TblSucursalDidiDialog } from './TblSucursalDidiDialog';\nimport { ImportExcelSucursalesDialog } from 'Modules/ImportExcel/ImportExcelSucursalesDialog'\nimport { ExcelExportHelper, PdfExportHelper, ReportHelper } from \"@serenity-is/extensions\";\nimport { Column } from '@serenity-is/sleekgrid';\r\n\r\n@Decorators.registerClass('SMarketPlace.Sucursales.TblSucursalDidiGrid')\r\nexport class TblSucursalDidiGrid extends EntityGrid<TblSucursalDidiRow, any> {\n\n    private rowSelection: GridRowSelectionMixin;\n\r\n    protected getColumnsKey() { return TblSucursalDidiColumns.columnsKey; }\r\n    protected getDialogType() { return TblSucursalDidiDialog; }\r\n    protected getRowDefinition() { return TblSucursalDidiRow; }\r\n    protected getService() { return TblSucursalDidiService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\n        this.rowSelection = new GridRowSelectionMixin(this);\r\n    }\n\n    protected createToolbarExtensions() {\r\n        super.createToolbarExtensions();\r\n        this.rowSelection = new GridRowSelectionMixin(this);\r\n    }\n\n    protected getColumns() {\r\n        var columns = super.getColumns();\r\n        columns.splice(0, 0, GridRowSelectionMixin.createSelectColumn(() => this.rowSelection));\r\n        return columns;\r\n    }\n\n\n    protected getButtons(): ToolButton[] {\r\n        var buttons = super.getButtons();\r\n\r\n        buttons.push(ExcelExportHelper.createToolButton({\r\n            grid: this,\r\n            service: TblSucursalDidiService.baseUrl + '/ListExcel',\r\n            onViewSubmit: () => this.onViewSubmit(),\r\n            separator: true\r\n        }));\r\n\r\n        buttons.push(PdfExportHelper.createToolButton({\r\n            grid: this,\r\n            onViewSubmit: () => this.onViewSubmit()\r\n        }));\r\n\n        buttons.push({\r\n            title: \"Eliminar\",\r\n            cssClass: \"text-red\",\r\n            icon: \"fa-times text-red\",\r\n            onClick: () => {\r\n                let selectedKeys = this.rowSelection.getSelectedKeys();\n                this.rowSelection.resetCheckedAndRefresh();\r\n                if (selectedKeys != null && typeof selectedKeys != 'undefined' && selectedKeys.length > 0) {\r\n                    Q.confirm(\r\n                        \"Confirma borrado de Sucursales ? \",\r\n                        () => {\r\n                            TblSucursalDidiService.DeleteMulti({ Ids: selectedKeys }, res => {\r\n                                Q.notifySuccess(\"Sucursales Eliminadas\");\r\n                                this.refresh();\r\n                            });\r\n                        },\r\n                        {\r\n                            onNo: () => {\r\n                                Q.notifyInfo(\"Sucursales no Eliminados\");\r\n                            },\r\n                            onCancel: () => {\r\n                                Q.notifyError(\"Operacion Cancelada\");\r\n                            },\r\n                            dialogClass: 's-MessageDialog s-WarningDialog'\r\n                        });\r\n                }\r\n\r\n                else {\r\n                    Q.warning(\"Seleccionar una sucursal para eliminar\");\r\n                }\r\n            }\r\n        });\n\n        // add our import button\r\n        buttons.push({\r\n            title: 'Import From Excel',\r\n            cssClass: 'export-xlsx-button',\r\n            onClick: () => {\r\n                // open import dialog, let it handle rest\r\n                var dialog = new ImportExcelSucursalesDialog({\r\n                });\r\n                dialog.element.on('dialogclose', () => {\r\n                    this.refresh();\r\n                    dialog = null;\r\n                });\n                dialog.TipoMP = 'Didi'\r\n                dialog.dialogOpen();\r\n            }\r\n        });\n\r\n        return buttons;\r\n    }\r\n}", "import { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { TblSucursalDidiForm, TblSucursalDidiRow, TblSucursalDidiService } from '../../ServerTypes/Sucursales';\r\n\r\n@Decorators.registerClass('SMarketPlace.Sucursales.TblSucursalDidiDialog')\r\nexport class TblSucursalDidiDialog extends EntityDialog<TblSucursalDidiRow, any> {\r\n    protected getFormKey() { return TblSucursalDidiForm.formKey; }\r\n    protected getRowDefinition() { return TblSucursalDidiRow; }\r\n    protected getService() { return TblSucursalDidiService.baseUrl; }\r\n    protected getModifyPermisison() { return TblSucursalDidiRow.updatePermission; }\r\n    protected getReadPermisison() { return TblSucursalDidiRow.readPermission }\r\n    protected getDeletePermission() { return TblSucursalDidiRow.deletePermission; }\r\n    protected getInsertPermission() { return TblSucursalDidiRow.insertPermission; }\r\n    protected getUpdatePermission() { return TblSucursalDidiRow.updatePermission; }\n\r\n    protected form = new TblSucursalDidiForm(this.idPrefix);\r\n}"],
  "mappings": "mTAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAA0E,SCA1E,IAAAC,EAAyC,SAIlC,IAAMC,EAAN,cAAoC,cAAsC,CAA1E,kCAUH,KAAU,KAAO,IAAIC,EAAoB,KAAK,QAAQ,EAT5C,YAAa,CAAE,OAAOA,EAAoB,OAAS,CACnD,kBAAmB,CAAE,OAAOC,CAAoB,CAChD,YAAa,CAAE,OAAOC,EAAuB,OAAS,CACtD,qBAAsB,CAAE,OAAOD,EAAmB,gBAAkB,CACpE,mBAAoB,CAAE,OAAOA,EAAmB,cAAe,CAC/D,qBAAsB,CAAE,OAAOA,EAAmB,gBAAkB,CACpE,qBAAsB,CAAE,OAAOA,EAAmB,gBAAkB,CACpE,qBAAsB,CAAE,OAAOA,EAAmB,gBAAkB,CAGlF,EAXaE,EAAAJ,EAAA,yBAAAA,EAANK,EAAA,CADN,aAAW,cAAc,+CAA+C,GAC5DL,GDAb,IAAAM,EAAiE,SAI1D,IAAMC,EAAN,cAAkC,YAAoC,CASzE,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,EACf,KAAK,aAAe,IAAI,wBAAsB,IAAI,CACtD,CARU,eAAgB,CAAE,OAAOC,EAAuB,UAAY,CAC5D,eAAgB,CAAE,OAAOC,CAAuB,CAChD,kBAAmB,CAAE,OAAOC,CAAoB,CAChD,YAAa,CAAE,OAAOC,EAAuB,OAAS,CAOtD,yBAA0B,CAChC,MAAM,wBAAwB,EAC9B,KAAK,aAAe,IAAI,wBAAsB,IAAI,CACtD,CAEU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC/B,OAAAA,EAAQ,OAAO,EAAG,EAAG,wBAAsB,mBAAmB,IAAM,KAAK,YAAY,CAAC,EAC/EA,CACX,CAGU,YAA2B,CACjC,IAAIC,EAAU,MAAM,WAAW,EAE/B,OAAAA,EAAQ,KAAK,oBAAkB,iBAAiB,CAC5C,KAAM,KACN,QAASF,EAAuB,QAAU,aAC1C,aAAc,IAAM,KAAK,aAAa,EACtC,UAAW,EACf,CAAC,CAAC,EAEFE,EAAQ,KAAK,kBAAgB,iBAAiB,CAC1C,KAAM,KACN,aAAc,IAAM,KAAK,aAAa,CAC1C,CAAC,CAAC,EAEFA,EAAQ,KAAK,CACT,MAAO,WACP,SAAU,WACV,KAAM,oBACN,QAAS,IAAM,CACX,IAAIC,EAAe,KAAK,aAAa,gBAAgB,EACrD,KAAK,aAAa,uBAAuB,EACrCA,GAAgB,MAAQ,OAAOA,GAAgB,aAAeA,EAAa,OAAS,EACpF,EAAE,QACE,oCACA,IAAM,CACFH,EAAuB,YAAY,CAAE,IAAKG,CAAa,EAAGC,GAAO,CAC7D,EAAE,cAAc,uBAAuB,EACvC,KAAK,QAAQ,CACjB,CAAC,CACL,EACA,CACI,KAAM,IAAM,CACR,EAAE,WAAW,0BAA0B,CAC3C,EACA,SAAU,IAAM,CACZ,EAAE,YAAY,qBAAqB,CACvC,EACA,YAAa,iCACjB,CAAC,EAIL,EAAE,QAAQ,wCAAwC,CAE1D,CACJ,CAAC,EAGDF,EAAQ,KAAK,CACT,MAAO,oBACP,SAAU,qBACV,QAAS,IAAM,CAEX,IAAIG,EAAS,IAAIC,EAA4B,CAC7C,CAAC,EACDD,EAAO,QAAQ,GAAG,cAAe,IAAM,CACnC,KAAK,QAAQ,EACbA,EAAS,IACb,CAAC,EACDA,EAAO,OAAS,OAChBA,EAAO,WAAW,CACtB,CACJ,CAAC,EAEMH,CACX,CACJ,EA7FaK,EAAAZ,EAAA,uBAAAA,EAANa,EAAA,CADN,aAAW,cAAc,6CAA6C,GAC1Db,GDLE,SAARc,GAA4B,IAC/B,0BAAuB,IAAIC,EAAoB,EAAE,UAAU,CAAC,EAAE,OAAO,CACzE,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "import_corelib", "TblSucursalDidiDialog", "TblSucursalDidiForm", "TblSucursalDidiRow", "TblSucursalDidiService", "__name", "__decorateClass", "import_extensions", "TblSucursalDidiGrid", "container", "TblSucursalDidiColumns", "TblSucursalDidiDialog", "TblSucursalDidiRow", "TblSucursalDidiService", "columns", "buttons", "selectedKeys", "res", "dialog", "ImportExcelSucursalesDialog", "__name", "__decorateClass", "pageInit", "TblSucursalDidiGrid", "__name"]
}
